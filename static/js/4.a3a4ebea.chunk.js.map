{"version":3,"sources":["Componenets/Dialogs/Dialogs.module.css","Componenets/Dialogs/DialogItem/DialogItem.jsx","Componenets/Dialogs/Message/Message.jsx","Componenets/Dialogs/Dialogs.jsx","Componenets/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","src","image","to","name","Message","message","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","placeholder","validate","required","Dialogs","dialogsElements","state","dialogs","map","d","messagesElements","messages","m","dialogsItems","values","addMessage","newMessageBody","compose","connect","messagesPage","dispatch","addMessageActionCreator","withAuthRedirect"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,QAAU,yBAAyB,eAAiB,kC,kHCYzMC,EAVI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,sBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,UACG,qBAAKC,IAAKP,EAAMQ,QADnB,IAC4B,cAAC,IAAD,CAASC,GAAIR,EAAb,SAAoBD,EAAMU,WCI/CC,EAPC,SAACX,GACjB,OACI,qBAAKG,UAAWC,IAAEQ,QAAlB,SAA4BZ,EAAMY,W,iCCGhCC,EAAeC,YAAiB,KAuChCC,EAAsBC,YAAW,CAACC,KAAM,wBAAlBD,EAbL,SAAChB,GACpB,OACI,uBAAMkB,SAAUlB,EAAMmB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAaC,IAAUZ,KAAK,iBAAiBa,YAAY,qBAAqBC,SAAY,CAACC,IAAUZ,OAEhH,8BACI,yDAQDa,EAxCC,SAAC1B,GAEb,IAAI2B,EAAkB3B,EAAM4B,MAAMC,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAMR,GAAI6B,EAAE7B,GAAIM,MAAOuB,EAAEvB,WAE5FwB,EAAmBhC,EAAM4B,MAAMK,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAStB,QAASsB,EAAEtB,aAOzE,OACI,sBAAKT,UAAWC,IAAEyB,QAAlB,UACI,qBAAK1B,UAAWC,IAAE+B,aAAlB,SACKR,IAEL,sBAAKxB,UAAWC,IAAE6B,SAAlB,UACKD,EACD,cAACjB,EAAD,CAAqBG,SAZb,SAACkB,GACjBpC,EAAMqC,WAAWD,EAAOE,0BCOjBC,sBACXC,aAfkB,SAACZ,GACnB,MAAO,CACHA,MAAOA,EAAMa,iBAGI,SAACC,GACtB,MAAO,CACHL,WAAY,SAACC,GACTI,EAASC,YAAwBL,SAQzCM,IAFWL,CAGbb","file":"static/js/4.a3a4ebea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__26tpV\",\"dialogsItems\":\"Dialogs_dialogsItems__3ucST\",\"dialog\":\"Dialogs_dialog__xXr3O\",\"active\":\"Dialogs_active__2uozQ\",\"message\":\"Dialogs_message__xWkL2\",\"newMessageArea\":\"Dialogs_newMessageArea__1XVVj\"};","import s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/Dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialog + \" \" + s.active}>\r\n           <img src={props.image}/> <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import s from './../Dialogs.module.css';\r\n\r\n\r\n\r\nconst Message = (props) => {\r\nreturn (\r\n    <div className={s.message}>{props.message}</div>\r\n)\r\n}\r\n\r\n\r\nexport default Message;","import s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { TextArea } from '../common/preloader/FormControls/FormControls';\r\nimport { maxLengthCreator, required } from '../../utilites/validators/validators';\r\n\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.state.dialogs.map(d => <DialogItem name={d.name} id={d.id} image={d.image} />)\r\n\r\n    let messagesElements = props.state.messages.map(m => <Message message={m.message} />)\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageBody)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n                <AddMessageFormRedux onSubmit = {addNewMessage}/>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component = {TextArea} name=\"newMessageBody\" placeholder=\"Enter your message\" validate = {[required, maxLength100]} />\r\n            </div>\r\n            <div>\r\n                <button>new message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm ({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs;\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { addMessageActionCreator} from '../../Redux/dialog-reducer';\r\nimport { withAuthRedirect } from '../hoc/WithAuthRedirect';\r\nimport Dialogs from './Dialogs';\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state: state.messagesPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageBody) => {\r\n            dispatch(addMessageActionCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n\r\n"],"sourceRoot":""}