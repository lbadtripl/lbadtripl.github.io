{"version":3,"sources":["../node_modules/redux-form/es/Form.js","Componenets/Profile/MyPosts/MyPosts.module.css","Componenets/Profile/MyPosts/Post/Post.module.css","Componenets/Profile/ProfileInfo/ProfileInfo.module.css","Componenets/Profile/MyPosts/Post/Post.jsx","Componenets/Profile/MyPosts/MyPosts.jsx","Componenets/Profile/MyPosts/MyPostsContainer.jsx","Componenets/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Componenets/Profile/ProfileInfo/ProfileDataForm.jsx","Componenets/Profile/ProfileInfo/ProfileInfo.jsx","Componenets/Profile/Profile.jsx","Componenets/Profile/ProfileContainer.jsx"],"names":["Form","_Component","props","_this","call","this","_reduxForm","Error","_inheritsLoose","_proto","prototype","componentDidMount","registerInnerOnSubmit","onSubmit","componentDidUpdate","prevProps","render","_this$props","rest","_objectWithoutPropertiesLoose","React","createElement","Component","propTypes","PropTypes","func","isRequired","object","withReduxForm","module","exports","Post","className","s","item","message","likeCounts","maxLength10","maxLengthCreator","MyPosts","memo","postsElements","posts","map","p","postsBlock","AddNewPostFormRedux","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","TextArea","name","validate","required","placeholder","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onMouseOut","updateUserStatus","autoFocus","onChange","e","currentTarget","value","ProfileDataReduxForm","profile","error","styles","formSummuryError","fieldCreator","Input","type","Object","keys","contacts","key","ProfileData","isOwner","goToEditMode","onClick","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","Contacts","contact","ProfileInfo","savePhoto","saveProfile","editModeBll","Preloader","discriptionBlock","src","photos","large","userPhoto","mainPhoto","target","files","length","initialValues","formData","Profile","compose","authorizedUserId","auth","userId","isAuth","getUserProfileThunkCreator","getUserStatusThunkCreator","updateUserStatusThunkCreator","savePhotoThunkCreator","saveProfileThunkCreator","withAuthRedirect","match","useMatch","params"],"mappings":"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","file":"static/js/3.50b1f46e.chunk.js","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withReduxForm } from './ReduxFormContext';\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n\n    if (!props._reduxForm) {\n      throw new Error('Form must be inside a component decorated with reduxForm()');\n    }\n\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.props._reduxForm.registerInnerOnSubmit(this.props.onSubmit);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.onSubmit !== prevProps.onSubmit) {\n      this.props._reduxForm.registerInnerOnSubmit(this.props.onSubmit);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _reduxForm = _this$props._reduxForm,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"_reduxForm\"]);\n\n    return /*#__PURE__*/React.createElement(\"form\", rest);\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  _reduxForm: PropTypes.object\n};\nexport default withReduxForm(Form);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__cOu1i\",\"posts\":\"MyPosts_posts__vHqrW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2Q8S_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"discriptionBlock\":\"ProfileInfo_discriptionBlock__3cqdk\",\"mainPhoto\":\"ProfileInfo_mainPhoto__2Hzni\",\"contact\":\"ProfileInfo_contact__1LkxC\"};","import s from './Post.module.css';\r\nconst Post = (props) => {\r\n  return (\r\n\r\n\r\n    <div className={s.item}>\r\n      {props.message}\r\n      <div>\r\n        <span>Like</span>\r\n        {props.likeCounts}\r\n      </div>\r\n\r\n    </div>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utilites/validators/validators';\r\nimport { TextArea } from '../../common/preloader/FormControls/FormControls';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\n// реакт мемо в рамках курса (не актуально)\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  \r\n  let postsElements = props.posts.map(p => <Post message={p.message} likeCounts={p.likeCounts} />)\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText)\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <div className={s.postsBlock}>\r\n      <h3> My posts</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      <div className={s.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n)\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={TextArea} name=\"newPostText\" validate = {[required, maxLength10]} placeholder = \"Post message\" />\r\n      </div>\r\n      <div>\r\n        <button>new post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\nconst AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator} from '../../../Redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText))\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                   <b>Status:</b> <span onDoubleClick={activateEditMode} > {props.status} </span>\r\n                </div>\r\n            }\r\n\r\n            {editMode &&\r\n                <div>\r\n                    <input onMouseOut={deactivateEditMode} autoFocus={true} onChange={onStatusChange} value={status} />\r\n                </div>\r\n            }\r\n\r\n\r\n        </div>)\r\n\r\n}\r\n\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import { Form, reduxForm } from \"redux-form\"\r\nimport { fieldCreator, Input, TextArea } from \"../../common/preloader/FormControls/FormControls\"\r\nimport styles from \"../../common/preloader/FormControls/FormControls.module.css\"\r\n\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <div>\r\n                {<button>Save</button>}\r\n            </div>\r\n            {error && <div className={styles.formSummuryError}> {error} </div>} \r\n            <div>\r\n                <b>Full name:</b> {fieldCreator(\"Full name\", \"fullName\", Input, [])}\r\n            </div>\r\n            <div>\r\n                <b> About me:</b> {fieldCreator(\"About me\", \"aboutMe\", TextArea, [])}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job:</b> {fieldCreator(\"\", \"lookingForAJob\", Input, [], {type: \"checkbox\"})}\r\n            </div>\r\n                <div>\r\n                    <b>My professional skills:</b> {fieldCreator(\"My skills\", \"lookingForAJobDescription\", TextArea, [])}\r\n                </div>\r\n            \r\n            <div>\r\n                <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n                    return <div key = {key} className = {styles.contacts}>\r\n                        <b>{key}</b> {fieldCreator(key, \"contacts.\" + key, Input, [])}\r\n                        </div>\r\n                })}\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({ form: \"edit-profile\" })(ProfileDataForm)\r\nexport default ProfileDataReduxForm","import Preloader from '../../common/preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from \"../../../assets/images/images.jpg\"\r\nimport { useState } from 'react';\r\nimport ProfileDataReduxForm from './ProfileDataForm';\r\nimport React from 'react';\r\n\r\nconst ProfileInfo = ({ profile, status, updateUserStatus, isOwner, savePhoto, saveProfile, editModeBll, setEditMode }) => {\r\n\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0])\r\n    }\r\n  }\r\n\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData)\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.discriptionBlock}>\r\n        <img src={profile.photos.large || userPhoto} className={s.mainPhoto} />\r\n\r\n        {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n\r\n        {editModeBll ? <ProfileDataReduxForm initialValues = {profile} profile={profile} onSubmit = {onSubmit} saveProfile = {saveProfile} /> : <ProfileData goToEditMode = {() => {setEditMode(true)}} profile={profile} isOwner = {isOwner} />}\r\n        <ProfileStatusWithHooks status={status} updateUserStatus={updateUserStatus} />\r\n\r\n      </div>\r\n    </div>)\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return (\r\n\r\n    <div>\r\n      <div>\r\n      {isOwner && <button onClick = {goToEditMode}>Edit</button>}\r\n      </div>\r\n      <div>\r\n        <b>Full name:</b> {profile.fullName}\r\n      </div>\r\n      <div>\r\n        <b> About me:</b> {profile.aboutMe}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job:</b> {profile.lookingForAJob ? \"Yes\" : \"No\"}\r\n      </div>\r\n      {profile.lookingForAJob &&\r\n        <div>\r\n          <b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n        </div>\r\n      }\r\n      <div>\r\n        <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n          return <Contacts key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst Contacts = ({ contactTitle, contactValue }) => {\r\n  return <div className={s.contact}> <b>{contactTitle}:</b> {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile ={props.profile} status = {props.status} editModeBll = {props.editMode} updateUserStatus = {props.updateUserStatus} isOwner = {props.isOwner} savePhoto = {props.savePhoto} saveProfile = {props.saveProfile} setEditMode = {props.setEditMode} />\r\n      <MyPostsContainer/>\r\n    </div>)\r\n}\r\n\r\nexport default Profile;","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useMatch } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { getUserProfileThunkCreator, getUserStatusThunkCreator, savePhotoThunkCreator, saveProfileThunkCreator, setEditMode, updateUserStatusThunkCreator } from \"../../Redux/profile-reducer\";\r\nimport { withAuthRedirect } from \"../hoc/WithAuthRedirect\";\r\nimport Profile from './Profile';\r\n\r\n\r\nconst ProfileContainer = (props) => {\r\n\r\n  let match = useMatch(\"/profile/:userId\");\r\n  let userId = match ? match.params.userId : props.authorizedUserId; \r\n  let isOwner = userId === props.authorizedUserId\r\n\r\n  useEffect(() => {\r\n    props.getUserProfileThunkCreator(userId)\r\n    props.getUserStatusThunkCreator(userId)\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <Profile {...props} profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatusThunkCreator} isOwner = {isOwner} editMode = {props.editMode} savePhoto = {props.savePhotoThunkCreator} saveProfile = {props.saveProfileThunkCreator} setEditMode = {props.setEditMode}/>\r\n    </div>)\r\n\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n  editMode:state.profilePage.editMode\r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfileThunkCreator, getUserStatusThunkCreator, updateUserStatusThunkCreator, savePhotoThunkCreator, saveProfileThunkCreator, setEditMode}),\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n\r\n"],"sourceRoot":""}